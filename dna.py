text = "CTTTTGTACGCCTGATGCTTAGGCAGAGACGCGCCTATGGTTGCCGGTTACGGCGAGTTACTTGGAACTTATAGCCTCCGACGCCTGAAGAAGTATCCAAGGGTTTCGTGGGATTATCGCAACAGACGATCGGATCGCTCTATCGATGTGACGGTTATACGATACGCCTGGTAGGACCCACGCAACTTTATTCCGTATCGAATTAACTTAACTTGTCAGACAGCGATTCGGGAGGTAATCTTGGGCTTCCACTTAATTGATCATCGGGGCTCTCACAACCGAAATCCGGATTTACTTGGTGTTACGCTCACTGCCAACTCCTTTTTTGTCTTAATAGTGGCTATGAAGGAATAGTAACAGGGCTTGGTTAGCCTTCATCCAACCTTAGTTTCTAGCCGACAGGCGAATAAAGCCTACAACATGCCTGCAAAGGAGGACCTGTGGAACGGGAAATTTTTCCGAATTAAAATTAACGAAAGTAAGGTGTTAGTGCGTATGGACGCCAACCATCTACGCCTTTGGAAATAACACAAGGGGACTACACGCTAGACTTGACCCTAGAATTCACCGAAGGTAGCACCCTCCCATGATCCCCTAGCAACGTACTGCCCTAGAGAAGTGGCAGACCTGCACTCCTCGGGGGATATGCTTAGACCGTAGTCTTGGTAACACGCTACATAAAGCCAGGTTGCGCCAAAAGAACGTTTGAACTGGAAATCCTGTTCCGACTTCAACTACGCTGCTGAAGTTGAGATGATATTCCTAGTATCTTCCAACTCATATGTCGTGGACTCTGCGGCCACTGACGAATAGAGCCAGGCACCTCTACCACACGTTGTATACCGAACCACAAGACTCAAGCACCGTCCCTAATGTTCAGATCTCCTCGTGCCGAGTATCCGAAAGTCGTTACGCTCATTCTGAATTTATCTATCTATCTATCTATCAGAGTCTGTGCTATTTAGCCTGTTCTGTCGACGCTCGATTCACCCATGTTCGCGCTAGCGGAGATGTTCTTAGAGTTAGATGCTGACAGCCCCCAAGGCACCAATTTCGTTATGAAAGTATACGGCACTCGTTGACGGCTCTCGCGATCTGCATGCATTGTGCGCTAGGGCAGTCTAGCAGGTTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGAGGGCCCTAGAGCGGAGTACCAACTAATTCAACAGGCGATAACTCAAGTGCTAATACTCCACTCCAAGAACGAGGGAATGTGAGATTGTTGTACTATCAGCAGTATGTGCGGCCAACAAGAGCCACAACTCAAGCTACTAAATTCTTGTAGGAGTATGCGCACCACCTGTGTGGGGATAGTACATCTATGCTATTTGGGTCCAGCGTGCTGTCTGGCTGGGTTGTGATCTTACAGGGAGTAGGTGAAGCGACAGTAATAGGTGAATACGATTTACGGTCTTGTCGGTCAACAAAAGGGGCGGGTACCGGAACCCTGAGGAGCTCGGCTACACGGCTCATACTACTAGCACCCTAGAAATTCACTTCAGTCTTATTGCGGGTCGGCCATCGTCTTCTAACTAGGATACGCGTACGTCTCGGCGAAAGAAAGAAAGAAAGAAAGAAAGAAAGAAAGAAAGAAAGAAAGAAAGAAAGAAAGAAAGAAAGAAAGAAAGAAAGAAAGAAAGAAAGAAAGAAAGAAAGAAAGAAAGAAAGGTATACTCATGTCGTGAACTCACCGAACTATACGTAGCCTCTAATCTTAGAAACATAGAACATTCGACGAAATGCGTTTGGAGGCGTCGACTAAGCCGGCCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCAGATCTGGGATAAGATTTGCCAACGTGCGGTATCGCCTGAATCACTTCTAGCCGGGGACCGCTTCCCGTCTAGTCTAGTCTAGTCTAGTCTAGTCTAGTCTAGTCTAGTCTAGTCTAGTCTAGTCTAGTCTAGTCTAGTCTAGTCTAGTCTAGTCTAGTCTAGTCTAGTCTAGTCTAGTCTAGTCTAGTCTAGTCTAGTCTAGTCTAGTCTAGCTAGGTTAGTCGGAACGTCTTTCTAGTTATGGCACATAGTTATTATGTAGGATACCGAAGCGCAAATACACTTAGCTTTGACCTATATCCGGCCATGGTTGATACTCGATAGCCTTTTTTGAGAAGAACCCGCGGTAGTTCCCCCTCATCCGCGTGACCGGTAGCATGTAGCCTCCGCGTACCTTACTTTCTATATAGTCACTTGTAAATAATACGACGCGATGTCCCGCCATTGCTTATGGAATGAGGTAGTAAAAGGTATTAGCCGGGCTAGTACGAATTTGAGATGATAGGGTCCGTGTGCTTCTAGCTCTCGAGATAGATAGATAGATAGATAGATAGATAGATAGATAGATAGATAGATAGATAGATAGATATTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTTTTTTCTTACTTGCCGTCATTGCAAACGTTGCACAGCTCATGGCGGCCAGCAAATTACGCAAGACTTCTTCCGCGAGTGCTATCTTGCTGAACTTAACGACCGATATGATAGATCCATCGCATTAGTGCTGCGACAATACGCGTCGGCGTACCTTCGTCTAATTGTAAACTACAGCCGACTACCAAAGATGTACAAGCAGGCTGCCGCAGTGAGTTTCACGCAGATAGTCTAGGTCATGTGCCAAGGAATGCTTAACGATCAGTGTCAGGTTGCCGTTAGCCCCGTTGATCGAAGAATCTCTGGGATAAATTTTATACCGACCATTCTCAGCGTCCTACTCTAGATACGTCCCGAACCGATGATCCCATCAATTGCATTATGGAGCGTCCCTCGAATGTGAGGAGCTCCATGTCGACATAGGAAGACTTATATTACTGATCAGTAACGACCAGCTTCGGTATGAAAACCTGACCGAGTAGTGCCAGAATGTAGCGCCCATTTTGGGGTGAATCACCTTCGTTAAGTTGATTATTGTTTATCTGGGGTTTTCCTACGTAATTGCGCCGATGTTGCAGACATTTTGCACGGAAATACCTCTGCGCCTAAAGCCATATCTTACATACAGTCGTGGAGGCGGGTAAGGGGGATGGTAGGGCAGGGCTGGGTCTCTGTACGGAGCTGCCCGAGGGCGACCCGACACGCGGAGAGCCCATCATTGACGCTGTATTAGTTAGGTGTATGTTCGTCGAGCTGGATAGGAGGGGAATGTATATCCGAGCCTACAGTGAACTAAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGAATGTTAGAATTAAGGCATGGGGATTTAACAAAGGGAGGGCGTTGCACTTGTCAATCTGACTTGCAAGTCTTGGGAGACTCTCTCGGCCTATCATCCCCGGGGGTCAGCTAACTTCTCTGCTGATGGCGCTTCTAGTATTTTTCACGTGCGGGACACACGACGTTTGACGGGGAAAGTGTTAGAGTGGTGGACCCTCCAACGTATGTTCATCTATGTTCGGTGGCTTGTCATTTCCTTGCAGTGCTGTTTGCCTTAAGTACCAACGCCAGGGCTTAACGGGTAGGCTCCGTAATTTCCACCAGAGTTCACCTAATCCTGTCTCTTAACAGTGGCTTATTCGCTAACGGGACGGCTGGTACACTCATGTTGGGCTCAATCACACGGTTGCCCCTGGGGCGCCGAACGCGGTCGCGACAAAGAAACATCCTCGCCCCCGCTCCAGGAAGTAAACTTTAGTCTCCTTCCTAAGCCAGCTCACTAAGGTGGCAATAGCTACATACGCACGACCTCTACCTCCTGCACGGGGGCCCAGCATATCTTAGCGAATCTCCCGCCATGCAGTAGCAGAGAATTTTCAGACGAATTGACACGGACACTTCCACTCTACGTAATTGAACATGCTGTCCCTTGCAAGCTTCGCCTCCCACTGGAAGGTAAGCCGCGAGTTAAGCCAGAAGTAAATTCTGTCAGACTCAGATTCGATCTCCGTAGTCTTGGGTGTGTTCCGTCGCACGGCGAAATACGGAAACTAAGGTTAGACTAGCCTGGATAACTTGCACAGTGGAAAATAGAGCAACTATGTGGTGAGCCTATGCTAACAAGGACGATTGAACACGGGGGATGGGTCACGCCCGAGCATTTTTCAGTATTAATCTCGCTATAACGTCTTGACCTGATTTCGGCACACATATTATGCCTCGACCTCTACTCGCAAGAACTACCTCCATTAAGCACGCAACGGCCGCGAAAATAAGAGTACTGGCGGGGGAACCATTTTTACATCTACTGTCGCCCAAGGAACCGTCCCCACCGAGAGCGTTTCGTTCCGAGAGTCCTTCTTGGTTGAGGAGGTAGCCGTTCGCGGCTTGTCAGTCATTTGCCGGTCCTCGTCACTTAGTTGGACACCTAATGGGGTGATCATACCTCGCGAACAGGGGGAGATCTATAAGAACACGCTATCATTGATACGCCGTTCCAAATAGTTTTGAGCTCTCCTTCCTTTCTATCGAATTCGCTTTAGCCATCTTCCGACGTGCCACGGTACGGCGTGGTCTTCAAACATAGTGTACGCTTGGCCCAACACGTACGTTTGTAACGAGCCAGGAGGCCAAGTTGATTTTCAATTATATCTAATCCATTCGATCGGGGGCCCGACGACCTCGCGCCGCATTCTGCGCTCCGTACCAACCCTAGGGACGGTGAGGCCTATTCGCTCTTTCTTAATCTGTTTGATTAGATTTAGTGCTTACAGGGCTGGACAACAGCGCTTTCCACCGTACCTTTTGTAACATGCTATCTCCTAGAAAAAGCTGTTAGAAGATCCGGACCCACGCTACCAGGGGGGGAAACGATCATCATGGACTGATTTGGGATCTTAGCTCCCTGCTTGCTCGTACGATAACCATTGGGAATTTAGTCCT"
STR = "AGATC"
count = 0
longest = 0
print(text[0:5])
for i in range(len(text)):
    try:
        if text[i:i+len(STR)] == STR:
            print('true')
            count += 1
            if text[i + len(STR): i + len(STR) * 2] == STR:
                continue
            else:
                if count > longest:
                    longest = count
                    count = 0
    except IndexError:
        break

print(f"count: {count}, longest: {longest}")
print("longest should return 4")